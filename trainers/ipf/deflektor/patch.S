TRAINER_ADDRESS = $75000
PATCH_JMP_ADDR	= $C0

DoIo		= -456	;$01C8

	AUTO	WS\START\0\2\CC\

START:
	DC.B	'DOS',0
	DC.L	0
	DC.L	880
CUSTOM:

	MOVE.L	#TRAINER_ADDRESS,A2
	MOVE.L	#$00000600,$0024(A1)		; len
	MOVE.L	A2,$0028(A1)			; buffer
	MOVE.W	#$0002,$001C(A1)		; command: read
	MOVE.L	#$00000800,$002C(A1)		; offset
	JSR	DoIo(A6)			; load trainer
	JSR	(A2)

	MOVEQ	#(END-DO_PATCH)-1,D0
	LEA	DO_PATCH(PC),A0
	LEA	(PATCH_JMP_ADDR).W,A1
.COPY_PATCH	
	MOVE.B	(A0)+,(A1)+
	DBF	D0,.COPY_PATCH

	
LB_000C	LEA	$00000400,A7
	LEA	$00DFF000,A6
	LEA	$00BFE001,A5
	LEA	$00BFD000,A4
	MOVE.W	#$7FFF,$0096(A6)
	MOVE.W	#$7FFF,$009A(A6)
	LEA	LB_004A(PC),A0
	LEA	$00000800,A1
	MOVE.W	#$00FF,D0		; copy into $800 content of LB_004A
LB_003E	MOVE.L	(A0)+,(A1)+             ; until the end ($BFC)
	DBF	D0,LB_003E
	JMP	$00000800		; jump into $800
LB_004A	MOVE.W	#$0000,$0180(A6)	
	MOVE.W	#$8210,$0096(A6)
	JSR	LB_00BC(PC)
	JSR	LB_00E6(PC)
	BNE.B	LB_008A
LB_0060	JSR	LB_026A(PC)
	JSR	LB_026A(PC)
	JSR	LB_0104(PC)
LB_006C	BMI.B	LB_006C
	LEA	$00078006,A0
	LEA	$00020000,A1
	MOVE.W	#$05DB,D0
LB_007E	MOVE.L	(A0)+,(A1)+
	DBF	D0,LB_007E
	BSR.W	PATCH_JMP	
	JMP	$00020000
LB_008A	JSR	LB_026A(PC)
	JSR	LB_026A(PC)
LB_0092	MOVE.W	#$000F,$0180(A6)
	JSR	LB_0104(PC)
	BPL.B	LB_00A6
LB_009E	MOVE.W	#$0F00,$0180(A6)
	BRA.B	LB_009E
LB_00A6	JSR	LB_026A(PC)
	MOVE.W	LB_034A(PC),D0
	CMP.W	#$009E,D0
	BNE.B	LB_0092
	JSR	LB_02B6(PC)
	BRA.W	LB_0060
LB_00BC	MOVE.W	#$4000,$0024(A6)
	MOVE.W	D0,$007E(A6)
	MOVE.W	#$7F00,$009E(A6)
	MOVE.W	#$9D00,$009E(A6)
	MOVE.B	#$FF,$0300(A4)
	MOVE.B	#$03,$0200(A5)
	JSR	LB_02F6(PC)
	JMP	LB_02B6(PC)
LB_00E6	MOVE.W	$0012(A6),D0
	MOVE.W	#$0032,D1
LB_00EE	ADDQ.W	#1,D2
	CMP.W	$0012(A6),D0
	BNE.B	LB_00FE
	DBF	D1,LB_00EE
	CLR.W	D0
	RTS	
LB_00FE	MOVE.W	#$FFFF,D0
	RTS	
LB_0104	LEA	$00DFF000,A6
	LEA	LB_033E(PC),A5
	MOVE.W	#$000A,(A5)
	LEA	LB_0352(PC),A5
	MOVE.L	#$00000000,(A5)
LB_011C	LEA	LB_034E(PC),A5
	MOVE.W	#$0014,(A5)
	JSR	LB_0314(PC)
LB_0128	JSR	LB_0208(PC)
	MOVE.W	$00070004,D0
	JSR	LB_01F6(PC)
	CMP.W	LB_034A(PC),D0
	BEQ.B	LB_014C
	LEA	LB_033E(PC),A5
	SUBQ.W	#1,(A5)
	BMI.W	LB_01EE
	JSR	LB_0240(PC)
	BRA.B	LB_0128
LB_014C	LEA	LB_0350(PC),A4
	MOVE.W	#$0002,(A4)
	LEA	$00070000,A5
LB_015A	MOVE.W	$0006(A5),D0
	JSR	LB_01F6(PC)
	CMP.W	#$0002,D0
	BGT.B	LB_01BC
	LEA	LB_0352(PC),A4
	TST.B	$00(A4,D0.W)
	BNE.B	LB_01BC
	MOVE.W	D0,D7
	LEA	$00078006,A0
	MULU.W	#$07D0,D0
	ADDA.L	D0,A0
	MOVE.L	A0,A2
	MOVE.W	#$07CF,D0
	LEA	$000C(A5),A1
	JSR	LB_0326(PC)
	MOVE.W	$0008(A5),D0
	JSR	LB_01F6(PC)
	MOVE.W	D0,D4
	LSL.W	#8,D4
	MOVE.W	$000A(A5),D0
	JSR	LB_01F6(PC)
	OR.W	D0,D4
	MOVE.L	A2,A0
	MOVE.W	#$03E7,D0
	JSR	LB_0340(PC)
	CMP.W	D1,D4
	BNE.B	LB_01BC
	LEA	LB_0352(PC),A4
	MOVE.B	#$FF,$00(A4,D7.W)
LB_01BC	LEA	$0FC8(A5),A5
	LEA	LB_0350(PC),A4
	SUBQ.W	#1,(A4)
	BPL.B	LB_015A
	MOVE.L	LB_0352(PC),D0
	CMP.L	#$FFFFFF00,D0
	BEQ.B	LB_01F2
	LEA	LB_034E(PC),A4
	SUBQ.W	#1,(A4)
	BPL.W	LB_0128
	LEA	LB_033E(PC),A4
	SUBQ.W	#1,(A4)
	BMI.B	LB_01EE
	JSR	LB_0240(PC)
	BRA.W	LB_011C
LB_01EE	MOVEQ	#-$01,D0
	RTS	
LB_01F2	MOVEQ	#$00,D0
	RTS	
LB_01F6	MOVEQ	#$07,D2
LB_01F8	LSL.W	#1,D0
	LSL.L	#1,D0
	DBF	D2,LB_01F8
	SWAP	D0
	ANDI.W	#$00FF,D0
	RTS	
LB_0208	MOVE.W	#$0002,$009C(A6)
	MOVE.L	#$00070000,$0020(A6)
	MOVE.W	#$4489,$007E(A6)
	MOVE.W	#$7F00,$009E(A6)
	MOVE.W	#$9D00,$009E(A6)
	MOVE.W	#$4000,$0024(A6)
	MOVE.W	#$9782,$0024(A6)
	MOVE.W	#$9782,$0024(A6)
	JSR	LB_0258(PC)
	RTS	
LB_0240	LEA	LB_034C(PC),A5
	MOVE.W	LB_034A(PC),(A5)
	JSR	LB_02B6(PC)
	MOVE.W	(A5),D0
LB_024E	JSR	LB_026A(PC)
	DBF	D0,LB_024E
	RTS	
LB_0258	MOVE.W	$001E(A6),D0
	ANDI.W	#$0002,D0
	BEQ.B	LB_0258
	MOVE.W	#$0002,$009C(A6)
	RTS	
LB_026A	LEA	LB_034A(PC),A3
	BCLR	#$01,$0100(A4)
	MOVE.W	(A3),D0
	ADDQ.W	#1,D0
	CMPI.W	#$00A0,D0
	BEQ.B	LB_02B4
	MOVE.W	D0,(A3)
	BCLR	#$02,$0100(A4)
	LSR.W	#1,D0
	BCC.B	LB_0292
	BSET	#$02,$0100(A4)
	BRA.B	LB_02B4
LB_0292	BSET	#$00,$0100(A4)
	BCLR	#$00,$0100(A4)
	NOP	
	NOP	
	NOP	
	NOP	
	BSET	#$00,$0100(A4)
	MOVE.W	#$1F40,D0
LB_02B0	DBF	D0,LB_02B0
LB_02B4	RTS	
LB_02B6	BSET	#$01,$0100(A4)
LB_02BC	BTST	#$04,$0000(A5)
	BEQ.B	LB_02E8
	BSET	#$00,$0100(A4)
	BCLR	#$00,$0100(A4)
	NOP	
	NOP	
	NOP	
	NOP	
	BSET	#$00,$0100(A4)
	MOVE.W	#$1F40,D0
LB_02E2	DBF	D0,LB_02E2
	BRA.B	LB_02BC
LB_02E8	LEA	LB_034A(PC),A3
	CLR.W	(A3)
	BCLR	#$02,$0100(A4)
	RTS	
LB_02F6	BSET	#$03,$0100(A4)
	BCLR	#$07,$0100(A4)
	BCLR	#$03,$0100(A4)
	MOVEQ	#$04,D0
LB_030A	JSR	LB_0314(PC)
	DBF	D0,LB_030A
	RTS	
LB_0314	BTST	#$04,$0D00(A4)
	BNE.B	LB_0314
LB_031C	BTST	#$04,$0D00(A4)
	BEQ.B	LB_031C
	RTS	
LB_0326	MOVEQ	#$00,D1
	MOVEQ	#$07,D2
	MOVE.W	(A1)+,D3
LB_032C	LSL.W	#1,D3
	LSL.L	#1,D3
	DBF	D2,LB_032C
	SWAP	D3
	MOVE.B	D3,(A0)+
	DBF	D0,LB_0326
	RTS	
LB_033E	DC.B	$00,$01
LB_0340 MOVEQ	#0,D1
LB_0342	ADD.W	(A0)+,D1
	DBF	D0,LB_0342
	RTS	
LB_034A	DC.W	0
LB_034C DC.W	0
LB_034E	DC.W	0
LB_0350	DC.W	0
LB_0352	DC.L	0
LB_0356	DC.L	0
	BSET	D1,$00(A2,D0.W)
	ORI.B	#$00,D0
	ORI.B	#$00,D0
	ORI.B	#$00,D0
	ORI.B	#$00,D0
	ORI.B	#$00,D0
	ORI.B	#$00,D0
PATCH_JMP:
	MOVE.W	#PATCH_JMP_ADDR,$20088+4
	RTS
DO_PATCH:
	JSR	TRAINER_ADDRESS+2
;	MOVE.L	#$4EF90000,$C0.W
;	MOVE.W	#$0800,$C4.W	
	JMP	$800;				; the final jmp to game
END	
	IF END-START>1024
	FAIL
	ENDC

	PRINTT	"BOOT BLOCK SIZE.."
	PRINTV	END-START
