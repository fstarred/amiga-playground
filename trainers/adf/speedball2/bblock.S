***************************************************
*
*	  	 STARRED MEDIASOFT
*
*		SPEEDBALL 2
*	Speedball_2_Brutal_Deluxe_v1.00_1991-01-07
*	_Image_Works_cr_CLS_RZR
*
*		VER 1.0 (2023)
*
*
***************************************************

WriteFlag
RewriteFinalJmp

	IFD RewriteFinalJmp

	PRINTT	"READING SECTOR 618.."
	AUTO	RS\$70000\618\1\
	PRINTT	"MODIFYING JMP ADDRESS.."
	AUTO	F.L\$70180\$70184\TRAINER_ADDRESS+2\
	PRINTT	"WRITING SECTOR 618.."
	AUTO	WS\$70000\618\1\

	ENDC

DoIo=		-456	; -$01C8
AllocMem=	-198	; -$00C6

TRAINER_ADDRESS	=$7D000
TRAINER_OFFSET	=$D8E00
TRAINER_SECTORS	=3
TRAINER_SECSIZE	=TRAINER_SECTORS*512

	IFD WriteFlag
	AUTO	WS\START\0\2\CC\
	ENDC

START:
BBLOCK:
	DC.B	'DOS',0
	DC.L	0
	DC.L	880	
LB_000C	
	MOVE.L	A1,A4
	BSR.W	LB_0300	
	NOP	
	LEA	LB_0020(PC),A0
	MOVE.L	A0,$00000080
	TRAP	#$0
LB_0020	
	MOVE.W	#$01A0,$00DFF096
	MOVE.W	#$0000,$00DFF180
	CLR.B	$0000001C
	MOVE.L	#$000C8000,D7	;BYTE SIZE
	MOVE.L	D7,D0
	MOVE.L	#$00010002,D1	;MEMF_CLEAR!MEMF_CHIP   
	JSR	AllocMem(A6)
	TST.L	D0
	BEQ.B	LB_0060
	MOVE.L	#$00100000,$00000028
	MOVE.B	#$01,$0000001C
	BRA.B	LB_00A2
LB_0060	
	MOVE.L	#$0006FC00,D7	;BYTE SIZE
	MOVE.L	D7,D0
	MOVE.L	#$00010004,D1	;MEMF_CLEAR!MEMF_FAST
	JSR	AllocMem(A6)
	TST.L	D0
	BEQ.B	LB_0084
	MOVE.B	#$02,$0000001C
	ADDI.L	#$0006FC00,D0
LB_0084	
	MOVE.L	D0,$00000028
	MOVE.L	#$00019000,D7	;BYTE SIZE
	MOVE.L	D7,D0
	MOVE.L	#$00010002,D1	;MEMF_CLEAR!MEMF_CHIP   
	JSR	AllocMem(A6)
	TST.L	D0
	BEQ.W	LB_00AC
LB_00A2	
	MOVE.L	D0,A5
	MOVE.L	D0,$00000084
	BRA.B	LB_00C4
LB_00AC	
	JSR	-$0078(A6)
	JSR	-$0096(A6)
	MOVE.L	#$4E704EF9,$00000000
	JMP	$00000000
LB_00C4	
	MOVE.L	#$00000001,$0024(A4)		; motor on
	MOVE.W	#$0009,$001C(A4)		; command: motor
	MOVE.L	A4,A1
	MOVE.L	$00000004,A6
	JSR	DoIo(A6)
	MOVE.L	#$00000A00,$0024(A4)		; LEN
	MOVE.L	$00000084,A1
	MOVE.L	A1,$0028(A4)			; BUFFER
	MOVE.W	#$0002,$001C(A4)		; COMMAND: READ
	MOVE.L	#$00000600,$002C(A4)		; OFFSET
	MOVE.L	$00000004,A6
	MOVE.L	A4,A1
	MOVE.L	A5,A0
	JSR	DoIo(A6)
	MOVE.L	$00000084,A0
	JMP	(A0)				; load game

; must remover in order to keep 1024 size limit
	
;	DC.B	'SPEEDBALL II  COPYRIGHT 90/91 THE BITMAP BROTHER'
;	DC.B	'S',$0D,$0D,'V1.00  VERSION 07:01:91',$0D,'SERIAL NO'
;	DC.B	'amiga876543212',$00
;	DC.B	'SPEEDBALL II  COPYRIGHT 90/91 THE BITMAP BROTHER'
;	DC.B	'S',$0D,$0D,'V1.00  VERSION 07:01:91',$0D,'SERIAL NO'
;	DC.B	'amiga876543212',$00
	DC.B	'SPEEDBALL II  COPYRIGHT 90/91 THE BITMAP BROTHER'
	DC.B	'S',$0D,$0D,'V1.00  VERSION 07:01:91',$0D,'SERIAL NO'
	DC.B	'amiga876543212',$00
	DC.B	'SPEEDBALL II  COPYRIGHT 90/91 THE BITMAP BROTHER'
	DC.B	'S',$0D,$0D,'V1.00  VERSION 07:01:91',$0D,'SERIAL NO'
	DC.B	'amiga876543212',$00
	DC.B	'SPEEDBALL II  COPYRIGHT 90/91 THE BITMAP BROTHER'
	DC.B	'S',$0D,$0D,'V1.00  VERSION 07:01:91',$0D,'SERIAL NO'
	DC.B	'amiga8765432'

;---	probably unused part	---

	MOVEM.L	D0-A6,-(A7)
	MOVE.L	#$00040000,$0028(A1)	; BUFFER - load razor intro from disk
	MOVE.L	#$000D7A00,$002C(A1)    ; OFFSET
	MOVE.L	#$00004600,$0024(A1)    ; LEN
	JSR	DoIo(A6)
	JSR	$00040000		; jmp razor intro
	MOVEM.L	(A7)+,D0-A6	
	MOVE.L	$0004.W,A6
	RTS	

;---	probably unused part	---

	DC.B	'HERS',$0D,$0D,'V1.00  VERSION 07:01:91',$0D
	DC.B	'SERIAL NOamiga876543212',$00
	DC.B	'SPEEDBALL II  COPYRIGHT 90/91 THE BITMAP BROTHER'
	DC.B	'S',$0D,$0D,'V1.00  VERSION 07:01:91',$0D,'SERIAL NO'
	DC.B	'amiga876543212',$00
	DC.B	'SPEEDBALL II  COPYRIGHT 90/91 THE BITMAP BROTHER'
	DC.B	'S',$0D,$0D,'V1.0'

LB_0300	
	MOVEM.L	D0-A6,-(A7)
	MOVE.L	A1,-(SP)		; Store A1 on SP for later usage
	MOVE.L	#$00040000,$0028(A1)	; BUFFER
	MOVE.L	#$000D7A00,$002C(A1)	; OFFSET
	MOVE.L	#$00004600,$0024(A1)	; LEN
	JSR	DoIo(A6)		; load razor intro
	JSR	$00040000		; jmp to razor intro
	
;---	custom  ---

	MOVE.L	(SP)+,A1			; Retrieve A1 from SP
	MOVE.L	#TRAINER_ADDRESS,$0028(A1)
	MOVE.L	#TRAINER_OFFSET, $002C(A1)	; OFFSET
	MOVE.L	#TRAINER_SECSIZE,$0024(A1)	; LEN		
	JSR	DoIo(A6)			; load trainer
	JSR	TRAINER_ADDRESS			; jmp to trainer menu

;---	end custom  ---

	MOVEM.L	(A7)+,D0-A6
	MOVE.L	$0004.W,A6
	RTS	
END
	PRINTT	"BBLOCK LEN..."
	PRINTV	END-START

	IF END-START>1024
	FAIL
	ENDC

	CNOP	0,1024

